steps:
  - name: node:12-slim
    id: "test onfirst"
    entrypoint: "npm"
    args: ["install-test"]
    dir: "src/onfirst"
    waitFor: ["-"]

  - name: node:12-slim
    id: "test onsecond"
    entrypoint: "npm"
    args: ["install-test"]
    dir: "src/onsecond"
    waitFor: ["-"]   

  - name: gcr.io/cloud-builders/docker
    id: "build roster"
    args: [
      "build",
      "-t","gcr.io/$PROJECT_ID/roster:$SHORT_SHA",
      ".",
      ]
    dir: "src/roster"
    waitFor: ['-']

  - name: gcr.io/cloud-builders/docker
    id: "push roster"
    args: [
      "push",
      "gcr.io/$PROJECT_ID/roster:$SHORT_SHA",
      ]
    waitFor: ["build roster"]

  - name: hashicorp/terraform:0.12.20
    id: "tf init"
    entrypoint: 'terraform'
    args: ['init','-backend-config=bucket=$PROJECT_ID-tfstate']
    waitFor: ['-']
  
  - name: hashicorp/terraform:0.12.20
    id: "tf apply"
    entrypoint: 'terraform'
    args: [
        "apply", "-auto-approve",
        "-var","project-id=$PROJECT_ID",
        "-var","image-tag=$SHORT_SHA"
    ]
    waitFor: ["tf init","test onfirst","test onsecond","push roster"]
    # env:
    #   - 'TF_LOG=DEBUG'
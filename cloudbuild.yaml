steps:
  - name: node:12-slim
    id: "test onfirst"
    entrypoint: "npm"
    args: ["install-test"]
    dir: "src/onfirst"
    waitFor: ["-"]

  - name: node:12-slim
    id: "test onsecond"
    entrypoint: "npm"
    args: ["install-test"]
    dir: "src/onsecond"
    waitFor: ["-"]   

  - name: gcr.io/cloud-builders/docker
    id: "build onfirst"
    args: ["build","-t","gcr.io/$PROJECT_ID/onfirst:$SHORT_SHA","."]
    dir: "src/onfirst"
    waitFor: ["test onfirst"]

  - name: gcr.io/cloud-builders/docker
    id: "build onsecond"
    args: ["build","-t","gcr.io/$PROJECT_ID/onsecond:$SHORT_SHA","."]
    dir: "src/onsecond"
    waitFor: ["test onsecond"]

  - name: gcr.io/cloud-builders/docker
    id: "build onthird"
    args: ["build","-t","gcr.io/$PROJECT_ID/onthird:$SHORT_SHA","."]
    dir: "src/onthird"
    waitFor: ["-"]

  - name: gcr.io/cloud-builders/docker
    id: "build roster"
    args: [
      "build",
      "-t","gcr.io/$PROJECT_ID/roster:$SHORT_SHA",
      "--build-arg","ENVIRONMENT_PREFIX=$_ENVIRONMENT_PREFIX",
      ".",
      ]
    dir: "src/roster"
    waitFor: ['-']

  - name: gcr.io/cloud-builders/docker
    id: "push onfirst"
    args: [
      "push",
      "gcr.io/$PROJECT_ID/onfirst:$SHORT_SHA",
      ]
    waitFor: ["build onfirst"]

  - name: gcr.io/cloud-builders/docker
    id: "push onsecond"
    args: [
      "push",
      "gcr.io/$PROJECT_ID/onsecond:$SHORT_SHA",
      ]
    waitFor: ["build onsecond"]

  - name: gcr.io/cloud-builders/docker
    id: "push onthird"
    args: [
      "push",
      "gcr.io/$PROJECT_ID/onthird:$SHORT_SHA",
      ]
    waitFor: ["build onthird"]

  - name: gcr.io/cloud-builders/docker
    id: "push roster"
    args: [
      "push",
      "gcr.io/$PROJECT_ID/roster:$SHORT_SHA",
      ]
    waitFor: ["build roster"]

  - name: hashicorp/terraform:0.12.20
    id: "tf init"
    entrypoint: 'terraform'
    args: ['init','-backend-config=bucket=$PROJECT_ID-tfstate']
    waitFor: ['-']
  
  - name: hashicorp/terraform:0.12.20
    id: "tf apply"
    entrypoint: 'terraform'
    args: [
        "apply", "-auto-approve",
        "-var","project_id=$PROJECT_ID",
        "-var",'service_names=["onfirst","onsecond","roster"]',
        "-var","image_tag=$SHORT_SHA"
    ]
    waitFor: ["tf init","push onfirst","push onsecond","push onthird","push roster"]

substitutions:
  _ENVIRONMENT_PREFIX: ''